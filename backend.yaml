- name: configure backend server
  become: yes
  hosts: backend
  


  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: nodejs
    ansible.builtin.dnf:
      name: "{{item}}"
      state: installed
    loop:
    - nodejs 
    - mysql
          
      
  #adding user for backend
  - name: create expense user
    ansible.builtin.user:
      name: expense

  #creating app directory
  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory
  #download backend file
  - name: download backend file
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  #unzip the file
  - name: unzip backend code 
    ansible.builtin.unarchive:
      src: /tmp/backend.zip 
      dest: /app 
      remote_src: yes

  #installing dependencies
  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app    

  #copy to remote location
  - name: copy backend service 
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service    
  - name: install python for mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9  

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: ExpenseApp@1
      login_host: db.devopsandaws.online 
      target: /app/schema/backend.sql
      state: import  
      name: all
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes        